// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopBoss.Web.Data;

#nullable disable

namespace ShopBoss.Web.Migrations
{
    [DbContext(typeof(ShopBossDbContext))]
    partial class ShopBossDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ShopBoss.Web.Models.DetachedProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingBottom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingLeft")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingRight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingTop")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Thickness")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Width")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("DetachedProducts", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Hardware", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Hardware", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Part", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingBottom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingLeft")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingRight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EdgebandingTop")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubassemblyId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Thickness")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Width")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubassemblyId");

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Width")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Subassembly", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentSubassemblyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Width")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentSubassemblyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Subassemblies", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.WorkOrder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkOrders", (string)null);
                });

            modelBuilder.Entity("ShopBoss.Web.Models.DetachedProduct", b =>
                {
                    b.HasOne("ShopBoss.Web.Models.WorkOrder", "WorkOrder")
                        .WithMany("DetachedProducts")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Hardware", b =>
                {
                    b.HasOne("ShopBoss.Web.Models.WorkOrder", "WorkOrder")
                        .WithMany("Hardware")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Part", b =>
                {
                    b.HasOne("ShopBoss.Web.Models.Product", "Product")
                        .WithMany("Parts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopBoss.Web.Models.Subassembly", "Subassembly")
                        .WithMany("Parts")
                        .HasForeignKey("SubassemblyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");

                    b.Navigation("Subassembly");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Product", b =>
                {
                    b.HasOne("ShopBoss.Web.Models.WorkOrder", "WorkOrder")
                        .WithMany("Products")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Subassembly", b =>
                {
                    b.HasOne("ShopBoss.Web.Models.Subassembly", "ParentSubassembly")
                        .WithMany("ChildSubassemblies")
                        .HasForeignKey("ParentSubassemblyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ShopBoss.Web.Models.Product", "Product")
                        .WithMany("Subassemblies")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ParentSubassembly");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Product", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Subassemblies");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.Subassembly", b =>
                {
                    b.Navigation("ChildSubassemblies");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("ShopBoss.Web.Models.WorkOrder", b =>
                {
                    b.Navigation("DetachedProducts");

                    b.Navigation("Hardware");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
