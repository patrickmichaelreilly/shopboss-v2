@model ShopBoss.Web.Models.TaskBlock

@{
    var nestingLevel = ViewData["NestingLevel"] as int? ?? 0;
    var indentClass = nestingLevel > 0 ? $"ms-{Math.Min(nestingLevel * 3, 12)}" : "";
    var blockIcon = "fas fa-cube";
}

<div class="task-block mb-2 @indentClass" data-block-id="@Model.Id" data-nesting-level="@nestingLevel">
    <div class="task-block-header d-flex justify-content-between align-items-center p-2 bg-light border rounded" 
         data-bs-toggle="collapse" 
         data-bs-target="#collapse-@Model.Id" 
         role="button"
         aria-expanded="true" 
         aria-controls="collapse-@Model.Id">
        <div class="d-flex align-items-center">
            <i class="fas fa-grip-vertical block-drag-handle me-2 text-muted" style="cursor: grab;" title="Drag to reorder blocks" onclick="event.stopPropagation();"></i>
            <i class="fas fa-chevron-down collapse-icon me-2 text-muted transition-transform" title="Collapse/Expand block"></i>
            <i class="@blockIcon me-2 text-primary"></i>
            <h6 class="mb-0 fw-bold">@Model.Name</h6>
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <small class="text-muted ms-2">â€¢ @Model.Description</small>
            }
            <span class="badge bg-info ms-2">@Model.Events.Count events</span>
            @if (Model.ChildTaskBlocks.Any())
            {
                <span class="badge bg-secondary ms-1">@Model.ChildTaskBlocks.Count nested</span>
            }
        </div>
        <div class="d-flex align-items-center gap-1" onclick="event.stopPropagation();">
            <!-- Component Creation Buttons -->
            <div class="btn-group btn-group-sm me-2" role="group">
                <button type="button" class="btn btn-outline-primary btn-sm" 
                        data-action="show-upload-file-modal" data-project-id="@Model.ProjectId" data-block-id="@Model.Id"
                        title="Upload File">
                    <i class="fas fa-paperclip"></i>
                </button>
                <button type="button" class="btn btn-outline-success btn-sm" 
                        data-action="show-create-purchase-order" data-project-id="@Model.ProjectId" data-block-id="@Model.Id"
                        title="Add Purchase Order">
                    <i class="fas fa-shopping-cart"></i>
                </button>
                <button type="button" class="btn btn-outline-success btn-sm" 
                        data-action="show-associate-work-orders" data-project-id="@Model.ProjectId" data-block-id="@Model.Id"
                        title="Add Manufacturing Work Order">
                    <i class="fas fa-cog"></i>
                </button>
                <button type="button" class="btn btn-outline-info btn-sm" 
                        data-action="show-create-custom-work-order" data-project-id="@Model.ProjectId" data-block-id="@Model.Id"
                        title="Add Custom Work Order">
                    <i class="fas fa-pencil-alt"></i>
                </button>
                <button type="button" class="btn btn-outline-secondary btn-sm" 
                        data-action="show-add-comment" data-project-id="@Model.ProjectId" data-block-id="@Model.Id"
                        title="Add Comment">
                    <i class="fas fa-comment"></i>
                </button>
                <button type="button" class="btn btn-outline-warning btn-sm" 
                        onclick="createNestedTaskBlock('@Model.ProjectId', '@Model.Id')"
                        title="Add Nested Block">
                    <i class="fas fa-cube"></i>
                </button>
            </div>
            
            <!-- Block Management Buttons -->
            <div class="btn-group btn-group-sm" role="group">
                <button type="button" class="btn btn-outline-secondary btn-sm" 
                        onclick="editTaskBlock('@Model.Id', '@Model.Name', '@(Model.Description ?? "")')" 
                        title="Edit block">
                    <i class="fas fa-edit"></i>
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm" 
                        onclick="deleteTaskBlock('@Model.Id')" 
                        title="Delete block">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    </div>
    
    <!-- Events and nested blocks within this block (unified container for mixed ordering) -->
    <div class="collapse show" id="collapse-@Model.Id">
        <div class="task-block-content ms-3 mt-1" data-block-id="@Model.Id">
            @{
                // Create a unified list of items (events and child blocks) for mixed ordering
                var allItems = new List<object>();
                
                // Add events
                foreach (var evt in Model.Events.OrderBy(e => e.BlockDisplayOrder ?? 0).ThenBy(e => e.EventDate))
                {
                    allItems.Add(new { Type = "Event", Item = evt, Order = evt.BlockDisplayOrder ?? 0 });
                }
                
                // Add child TaskBlocks  
                foreach (var childBlock in Model.ChildTaskBlocks.OrderBy(cb => cb.DisplayOrder))
                {
                    allItems.Add(new { Type = "TaskBlock", Item = childBlock, Order = childBlock.DisplayOrder });
                }
                
                // Sort by order for mixed display
                allItems = allItems.OrderBy(item => ((dynamic)item).Order).ToList();
            }
            
            @foreach (var item in allItems)
            {
                @if (((dynamic)item).Type == "Event")
                {
                    var evt = (ShopBoss.Web.Models.ProjectEvent)((dynamic)item).Item;
                    <div class="timeline-event blocked-event" data-event-id="@evt.Id">
                        <div class="event-content">
                            <div class="event-header d-flex justify-content-between align-items-center mb-1">
                                <div class="event-metadata">
                                    <i class="fas fa-grip-vertical event-drag-handle me-2 text-muted" style="cursor: grab; font-size: 0.8em;" title="Drag to reorder events"></i>
                                    <span class="badge bg-@(evt.EventType == "comment" ? "info" : "secondary") me-1">@evt.EventType</span>
                                    @if (evt.RowNumber.HasValue)
                                    {
                                        <span class="badge bg-primary me-1">Row @evt.RowNumber</span>
                                    }
                                    <small class="text-muted me-1">@evt.EventDate.ToString("yyyy-MM-dd HH:mm")</small>
                                    <small class="text-muted">by @(evt.CreatedBy ?? "Unknown")</small>
                                </div>
                            </div>
                            <div class="event-description">
                                @if (evt.EventType == "attachment" && evt.Attachment != null)
                                {
                                    <div class="d-flex align-items-start">
                                        <div class="d-flex align-items-center me-3">
                                            <i class="fas fa-paperclip me-1 text-muted"></i>
                                            <a href="/Project/DownloadFile/@evt.Attachment.Id" class="text-decoration-none" title="Download @evt.Attachment.FileName">
                                                <strong>@evt.Attachment.OriginalFileName</strong>
                                            </a>
                                            <small class="text-muted ms-2">
                                                (@((evt.Attachment.FileSize / 1024.0 / 1024.0).ToString("F2")) MB)
                                            </small>
                                        </div>
                                        @if (evt.Attachment.Category == "SmartSheet Import")
                                        {
                                            <div class="ms-auto">
                                                <input type="text" class="form-control form-control-sm" 
                                                       style="width: 200px; font-size: 0.8em;" 
                                                       value="@evt.Description" 
                                                       onblur="updateAttachmentComment('@evt.Id', this.value)"
                                                       placeholder="Add comment..."
                                                       title="Edit comment for this SmartSheet attachment">
                                            </div>
                                        }
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(evt.Description) && evt.Attachment.Category != "SmartSheet Import")
                                    {
                                        <div class="mt-1 text-muted small">@evt.Description</div>
                                    }
                                }
                                else
                                {
                                    @evt.Description
                                }
                            </div>
                        </div>
                    </div>
                }
                else if (((dynamic)item).Type == "TaskBlock")
                {
                    var childBlock = (ShopBoss.Web.Models.TaskBlock)((dynamic)item).Item;
                    ViewData["NestingLevel"] = nestingLevel + 1;
                    @await Html.PartialAsync("_TaskBlockRecursive", childBlock, ViewData)
                }
            }
        </div>
    </div>
</div>